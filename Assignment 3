1.1  Write a Python Program to implement your own myreduce() function which works exactly like Python's built-in function reduce()

sol------- def myreduce(num):
    num_list=list(range(1,number+1))
    sum_of_elements=0
    
    for i in num_list:
        sum_of_elements=sum_of_elements+i
        
    return num_list,sum_of_elements

    #Input 
    print("Input:")
    number=int(input("Please insert the number :"))

    #Function Execution

    output_value=myreduce(number)

    #Output
     print("Output:")
     print("List of First n Natural numbers are:",output_value[0])
     print("Sum of List elements are :",output_value[1])

OUTPUT------------- Input:
                    Please insert the number :5
                    Output:
                    List of First n Natural numbers are: [1, 2, 3, 4, 5]
                    Sum of List elements are : 15


1.2 Write a Python program to implement your own myfilter() function which works exactly like Python's built-in function filter()


SOL --------print("Input:")
            number=int(input("Please insert the number: "))

            num_list=list(range(1,number+1))


            def myfilter(num_list):
                  num_even_list=[]
                  num_odd_list=[]
    
                  for i in num_list:
                        if(i%5==0):
                            if(i%2==0):
                                   num_even_list.append(i)
                             else:
                                  num_odd_list.append(i)
                
                  return num_even_list,num_odd_list

                 output_value=myfilter(num_list)
                 print("Output:")
                 print("List of numbers:",num_list)
                 print("List of Even numbers, which are multiples of 5 are:",output_value[0])
                 print("List of Odd numbers, which are multiples of 5 are:",output_value[1])
OUTPUT= ------------ Input:
                     Please insert the number: 10
                     Output:
                     List of numbers: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
                     List of Even numbers, which are multiples of 5 are: [10]
                     List of Odd numbers, which are multiples of 5 are: [5]

 Q2---Implement List comprehensions to produce the following lists. Write List comprehensions to produce the following Lists 
['A', 'C', 'A', 'D', 'G', 'I', ’L’, ‘ D’]
['x', 'xx', 'xxx', 'xxxx', 'y', 'yy', 'yyy', 'yyyy', 'z', 'zz', 'zzz', 'zzzz'] 
['x', 'y', 'z', 'xx', 'yy', 'zz', 'xxx', 'yyy', 'zzz', 'xxxx', 'yyyy', 'zzzz'] 
[[2], [3], [4], [3], [4], [5], [4], [5], [6]] 
[[2, 3, 4, 5], [3, 4, 5, 6], [4, 5, 6, 7], [5, 6, 7, 8]] 
[(1, 1), (2, 1), (3, 1), (1, 2), (2, 2), (3, 2), (1, 3), (2, 3), (3, 3)]

sol-------      PATTERN --1
                word = "acadgild"
                lst=[]
                for w in word:
                  word = w.upper()
                  word = lst.append(word)
                print(lst)
           
# USING LIST COMPREHENSIONS
              word = 'acadgild'
              lst = [w.upper() for w in word]
              print(lst)

PATTERN  2-------   word = list('xyz')
                    lst = [i*j for i in word for j in range(1,5)]
                    print(lst)
                    
                    
PATTERN 3 ---------  word = list('xyz')
                     lst = [i*j for i in range(1,5) for j in word]
                     print(lst)


PATTERN 4 ------------ number = [2,3,4]
                       lst = [[i+j] for i in number for j in range(0,3)]
                       print(lst)

PATTERN 5---------  lst = [[i+j for i in range(0,4)] for j in range(2,6)]
                     print(lst)
                     
PATTERN 6---------- lst= [(j,i) for i in range(1,4) for j in range(1,4)]
                    print(lst) 
                    
                    
                   

***********************************************THE END*****************************************





                    
                    
                    
                    
                    
                    
                    
                    
                    
